/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

/**
 *
 * @author ZAENUDIN
 */
public class CelciustoFahrenheitGUI extends javax.swing.JFrame {

    /**
     * Creates new form CelciustoFahrenheitGUI
     */
    public CelciustoFahrenheitGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        temperatureFrom = new javax.swing.JComboBox<>();
        temperatureTo = new javax.swing.JComboBox<>();
        displayTo = new javax.swing.JTextField();
        displayFrom = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        convert = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        temperatureFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celcius", "Fahrenheit", "Kelvin", "Reamur" }));
        temperatureFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temperatureFromActionPerformed(evt);
            }
        });

        temperatureTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fahrenheit", "Celcius", "Kelvin", "Reamur" }));

        displayTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayToActionPerformed(evt);
            }
        });

        jLabel1.setText("From");

        jLabel3.setText("To");

        convert.setText("Convert");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel4.setText("CONVERTING TEMPERATURE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(displayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(temperatureFrom, 0, 115, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(displayTo)
                                .addGap(18, 18, 18)
                                .addComponent(temperatureTo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(99, 99, 99))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear)
                    .addComponent(convert))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        displayFrom.setText("");
        displayTo.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void displayToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayToActionPerformed

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
        // TODO add your handling code here:
        
        //CELCIUS
        if (temperatureFrom.getSelectedItem().equals("Celcius")){
            double celcius = Double.parseDouble(displayFrom.getText());
            if (temperatureTo.getSelectedItem().equals("Fahrenheit")){
                celcius = celcius * 1.8 + 32;
                String format = String.format("%1.2f",celcius);
                displayTo.setText(format);
            }
            else if (temperatureTo.getSelectedItem().equals("Kelvin")){
                celcius = celcius + 273.15;
                String format = String.format("%1.2f",celcius);
                displayTo.setText(format);
            }
            else if (temperatureTo.getSelectedItem().equals("Reamur")){
                celcius = celcius * 0.8;
                String format = String.format("%1.2f",celcius);
                displayTo.setText(format);
            }
            else{
            displayTo.setText(displayFrom.getText());
            }
        }
        
        //FAHRENHEIT
        else if (temperatureFrom.getSelectedItem().equals("Fahrenheit")){
            double fahrenheit = Double.parseDouble(displayFrom.getText());
            if (temperatureTo.getSelectedItem().equals("Celcius")){
                fahrenheit = (fahrenheit - 32) / 1.8;
                String format = String.format("%.2f",fahrenheit);
                displayTo.setText(format);
            }
            else if (temperatureTo.getSelectedItem().equals("Kelvin")){
                fahrenheit = (fahrenheit + 459.67) / 1.8;
                String format = String.format("%.2f",fahrenheit);
                displayTo.setText(format);
            }
            else if (temperatureTo.getSelectedItem().equals("Reamur")){
                fahrenheit = (fahrenheit - 32) / 2.25;
                String format = String.format("%.2f",fahrenheit);
                displayTo.setText(format);
            }
            else{
                displayTo.setText(displayFrom.getText());
            }
        }
        
        //KELVIN
        else if (temperatureFrom.getSelectedItem().equals("Kelvin")){
            double kelvin = Double.parseDouble(displayFrom.getText());
            if (temperatureTo.getSelectedItem().equals("Fahrenheit")){
                kelvin = kelvin * 1.8 - 459.67;
                String format = String.format("%.2f",kelvin);
                displayTo.setText(format);
            }
            else if (temperatureTo.getSelectedItem().equals("Celcius")){
                kelvin = kelvin - 273.15;
                String format = String.format("%.2f",kelvin);
                displayTo.setText(format);
            }
            else if (temperatureTo.getSelectedItem().equals("Reamur")){
                kelvin = (kelvin - 273.15) * 0.8;
                String format = String.format("%.2f",kelvin);
                displayTo.setText(format);
            }
            else{
                displayTo.setText(displayFrom.getText());
            }
        }
        
        //REAMUR
        else if (temperatureFrom.getSelectedItem().equals("Reamur")){
            double reamur = Double.parseDouble(displayFrom.getText());
            if (temperatureTo.getSelectedItem().equals("Fahrenheit")){
                reamur = (reamur - 7.5) * 24 / 7 + 32;
                String format = String.format("%.2f",reamur);
                displayTo.setText(format);
            }
            else if (temperatureTo.getSelectedItem().equals("Kelvin")){
                reamur = reamur / 0.8 + 273.15;
                String format = String.format("%.2f",reamur);
                displayTo.setText(format);
            }
            else if (temperatureTo.getSelectedItem().equals("Celcius")){
                reamur = reamur / 0.8;
                String format = String.format("%.2f",reamur);
                displayTo.setText(format);
            }
            else{
                displayTo.setText(displayFrom.getText());
            }
        }
        
    }//GEN-LAST:event_convertActionPerformed

    private void temperatureFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temperatureFromActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_temperatureFromActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CelciustoFahrenheitGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CelciustoFahrenheitGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CelciustoFahrenheitGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CelciustoFahrenheitGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CelciustoFahrenheitGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton convert;
    private javax.swing.JTextField displayFrom;
    private javax.swing.JTextField displayTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> temperatureFrom;
    private javax.swing.JComboBox<String> temperatureTo;
    // End of variables declaration//GEN-END:variables
}
